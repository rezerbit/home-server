version: "3"

volumes:
  data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/store/nextcloud/data
  postgres:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/store/nextcloud/postgres
  redis-data:


services:
  postgres:
    container_name: nextcloud-postgres
    image: postgres:15
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - internal
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -h 127.0.0.1"
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    container_name: nextcloud
    image: nextcloud:25
    user: www-data:www-data
    volumes:
      - data:/var/www/html
      - type: bind
        source: ./redis-session.ini
        target: /usr/local/etc/php/conf.d/redis-session.ini
    networks:
      - traefik-proxy
      - internal
    environment:
      POSTGRES_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_HOSTNAME: ${NEXTCLOUD_HOSTNAME}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
      OVERWRITEPROTOCOL: https
      REDIS_HOST: redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOSTNAME}`)"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextcloud.loadbalancer.passhostheader=true"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-redirectregex1,nextcloud-redirectregex2"
      - "traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.regex=https?://([^/]*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.replacement=https://$${1}/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.regex=https?://([^/]*)(/.well-known[^#]*)"
      - "traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.replacement=https://$${1}/index.php$${2}"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  cron:
    image: nextcloud:25
    container_name: nextcloud-cron
    restart: unless-stopped
    volumes:
      - data:/var/www/html
      - type: bind
        source: ./redis-session.ini
        target: /usr/local/etc/php/conf.d/redis-session.ini
    entrypoint: /cron.sh
    depends_on:
      - postgres
      - redis
    networks:
      - internal

  redis:
    image: redis:7
    container_name: nextcloud-redis
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - redis-data:/data

networks:
  traefik-proxy:
    external: true
  internal:
